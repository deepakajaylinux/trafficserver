# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 4.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-08 17:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sdk/http-headers/urls.en.rst:2
msgid "URLs"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:21
msgid ""
"API URL functions provide access to URL data stored in marshal buffers. The "
"URL functions can create, copy, retrieve or delete entire URLs; they can "
"also retrieve or modify parts of URLs, such as port or scheme information."
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:26
msgid "The general form of an Internet URL is:"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:33
msgid ""
"The URL data structure includes support for two specific types of internet "
"URLs. HTTP URLs have the form:"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:41
msgid ""
"The URL port is stored as integer. All remaining parts of the URL (scheme, "
"user, etc.) are stored as strings. Traffic Server URL functions are named "
"according to the portion of the URL on which they operate. For instance, "
"the function that retrieves the host portion of a URL is named "
"``TSUrlHostGet``."
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:47
msgid ""
"To facilitate fast comparisons and reduce storage size, Traffic Server "
"defines several preallocated scheme names."
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:52
msgid "``TS_URL_SCHEME_FILE``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:51
msgid "\"file\" ``TS_URL_LEN_FILE``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:56
msgid "``TS_URL_SCHEME_FTP``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:55
msgid "\"ftp\" ``TS_URL_LEN_FTP``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:60
msgid "``TS_URL_SCHEME_GOPHER``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:59
msgid "\"gopher\" ``TS_URL_LEN_GOPHER``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:64
msgid "``TS_URL_SCHEME_HTTP``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:63
msgid "\"http\" ``TS_URL_LEN_HTTP``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:68
msgid "``TS_URL_SCHEME_HTTPS``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:67
msgid "\"https\" ``TS_URL_LEN_HTTPS``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:72
msgid "``TS_URL_SCHEME_MAILTO``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:71
msgid "\"mailto\" ``TS_URL_LEN_MAILTO``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:76
msgid "``TS_URL_SCHEME_NEWS``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:75
msgid "\"news\" ``TS_URL_LEN_NEWS``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:80
msgid "``TS_URL_SCHEME_NNTP``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:79
msgid "\"nntp\" ``TS_URL_LEN_NNTP``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:84
msgid "``TS_URL_SCHEME_PROSPERO``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:83
msgid "\"prospero\" ``TS_URL_LEN_PROSPERO``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:88
msgid "``TS_URL_SCHEME_TELNET``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:87
msgid "\"telnet\" ``TS_URL_LEN_TELNET``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:92
msgid "``TS_URL_SCHEME_WAIS``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:91
msgid "\"wais\" ``TS_URL_LEN_WAIS``"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:94
msgid ""
"The scheme names above are defined in ``ts.h`` as ``const`` ``char*`` "
"strings. When Traffic Server sets the scheme portion of the URL (or any "
"portion for that matter), it quickly checks to see if the new value is one "
"of the known values. If it is, then it stores a pointer into a global table "
"(instead of storing the known value in the marshal buffer). The scheme "
"values listed above are also pointers into this table. This allows simple "
"pointer comparison of the value returned from ``TSUrlSchemeGet`` with one "
"of the values listed above. You should use the Traffic Server-defined "
"values when referring to one of the known schemes, since doing so can "
"prevent the possibility of spelling errors."
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:105
msgid "Traffic Server **URL functions** are listed below:"
msgstr ""

#: ../../sdk/http-headers/urls.en.rst:107
msgid ""
":c:func:`TSUrlClone` :c:func:`TSUrlCopy` :c:func:`TSUrlCreate` :c:func:"
"`TSUrlDestroy` :c:func:`TSUrlPrint` :c:func:`TSUrlFtpTypeGet` :c:func:"
"`TSUrlFtpTypeSet` :c:func:`TSUrlHostGet` :c:func:`TSUrlHostSet` :c:func:"
"`TSUrlHttpFragmentGet` :c:func:`TSUrlHttpFragmentSet` :c:func:"
"`TSUrlHttpParamsGet` :c:func:`TSUrlHttpParamsSet` :c:func:"
"`TSUrlHttpQueryGet` :c:func:`TSUrlHttpQuerySet` :c:func:`TSUrlLengthGet` :c:"
"func:`TSUrlParse` :c:func:`TSUrlPasswordGet` :c:func:`TSUrlPasswordSet` :c:"
"func:`TSUrlPathGet` :c:func:`TSUrlPathSet` :c:func:`TSUrlPortGet` :c:func:"
"`TSUrlPortSet` :c:func:`TSUrlSchemeGet` :c:func:`TSUrlSchemeSet` :c:func:"
"`TSUrlStringGet` :c:func:`TSUrlUserGet` :c:func:`TSUrlUserSet`"
msgstr ""
