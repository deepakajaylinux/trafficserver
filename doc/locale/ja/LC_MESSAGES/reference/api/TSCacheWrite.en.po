#
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-19 07:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/api/TSCacheWrite.en.rst:19
msgid "TSCacheWrite"
msgstr ""

#: ../../reference/api/TSCacheWrite.en.rst:21
msgid ""
"Asks the Traffic Server cache if contp can start writing the object "
"(corresponding to key) to the cache."
msgstr ""

#: ../../reference/api/TSCacheWrite.en.rst:26
msgid "Synopsis"
msgstr ""

#: ../../reference/api/TSCacheWrite.en.rst:28
msgid "`#include <ts/ts.h>`"
msgstr ""

#: ../../reference/api/TSCacheWrite.en.rst:34
msgid "Description"
msgstr ""

#: ../../reference/api/TSCacheWrite.en.rst:36
msgid ""
"If the object can be written, the cache calls contp back with the event :c:"
"data:`TS_EVENT_CACHE_OPEN_WRITE`.  In this case, the cache also passes "
"contp a cache vconnection and contp can then initiate a write operation on "
"that vconnection using :c:type:`TSVConnWrite`.  The object is not committed "
"to the cache until the vconnection is closed. When all data has been "
"transferred, the user (contp) must do an :c:type:`TSVConnClose`.  In case "
"of any errors, the user MUST do an ``TSVConnAbort(contp, 0)``."
msgstr ""

#: ../../reference/api/TSCacheWrite.en.rst:45
msgid ""
"If the object cannot be written, the cache calls contp back with the event :"
"c:data:`TS_EVENT_CACHE_OPEN_WRITE_FAILED`.  This can happen, for example, "
"if there is another object with the same key being written to the cache.  "
"The user (contp) has the option to cancel the action returned by :c:type:"
"`TSCacheWrite`."
msgstr ""

#: ../../reference/api/TSCacheWrite.en.rst:51
msgid ""
"Note that reentrant calls are possible, i.e. the cache can call back the "
"user (contp) in the same call."
msgstr ""
