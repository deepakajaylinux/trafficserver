#
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-19 07:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/api/TSVConnReenable.en.rst:19
msgid "TSVConnReenable"
msgstr ""

#: ../../reference/api/TSVConnReenable.en.rst:22
msgid "Synopsis"
msgstr ""

#: ../../reference/api/TSVConnReenable.en.rst:24
msgid "`#include <ts/ts.h>`"
msgstr ""

#: ../../reference/api/TSVConnReenable.en.rst:29
msgid "Description"
msgstr ""

#: ../../reference/api/TSVConnReenable.en.rst:31
msgid ""
"Reenable the SSL connection :arg:`svc`. If a plugin hook is called, ATS "
"processing on that connnection will not resume until this is invoked for "
"that connection."
msgstr ""

#: ../../reference/api/TSVConnReenable.en.rst:33
msgid ""
"If the server running Traffic Server has the appropriate openSSL patch "
"installed, the SNI callback can return ``SSL_TLSEXT_ERR_READ_AGAIN`` to "
"stop the SSL handshake processing.  This results in ``SSL_accept`` "
"returning ``SSL_ERROR_WANT_SNI_RESOLVE`` before completing the SSL "
"handshake (only the client hello message will have been received).  "
"Additional processing could reenable the virtual connection causing the "
"``SSL_accept`` to be called again to complete the handshake exchange.  In "
"the case of a blind tunnel conversion, the SSL handshake will never be "
"completed by Traffic Server."
msgstr ""

#: ../../reference/api/TSVConnReenable.en.rst:35
msgid ""
"The plugin callbacks can halt the SSL handshake processing by not "
"reenabling the connection (i.e., by not calling :c:func:"
"`TSSslVConnReenable`).  If a plugin SNI callback does not reenable the "
"connection, the global callback will return ``SSL_TLSEXT_ERR_READ_AGAIN``."
msgstr ""

#: ../../reference/api/TSVConnReenable.en.rst:37
msgid ""
"Without the openSSL patch, the handshake processing in ``SSL_accept`` will "
"not be stopped even if the SNI callback does not reenable the connection."
msgstr ""
