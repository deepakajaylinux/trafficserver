#
msgid ""
msgstr ""
"Project-Id-Version: Apache Traffic Server 5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-19 07:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../reference/api/TSHttpTxnIntercept.en.rst:19
msgid "TSHttpTxnIntercept"
msgstr ""

#: ../../reference/api/TSHttpTxnIntercept.en.rst:21
msgid ""
"Allows a plugin take over the servicing of the request as though it was the "
"origin server."
msgstr ""

#: ../../reference/api/TSHttpTxnIntercept.en.rst:26
msgid "Synopsis"
msgstr ""

#: ../../reference/api/TSHttpTxnIntercept.en.rst:28
msgid "`#include <ts/ts.h>`"
msgstr ""

#: ../../reference/api/TSHttpTxnIntercept.en.rst:34
msgid "Description"
msgstr ""

#: ../../reference/api/TSHttpTxnIntercept.en.rst:36
msgid ""
"contp will be sent :c:data:`TS_EVENT_NET_ACCEPT`.  The edata passed with :c:"
"data:`TS_NET_EVENT_ACCEPT` is an :c:type:`TSVConn` just as it would be for "
"a normal accept.  The plugin must act as if it is an http server and read "
"the http request and body off the :c:type:`TSVConn` and send an http "
"response header and body."
msgstr ""

#: ../../reference/api/TSHttpTxnIntercept.en.rst:42
msgid ""
":c:func:`TSHttpTxnIntercept` must be called be called from only :c:data:"
"`TS_HTTP_READ_REQUEST_HOOK`.  Using :c:type:`TSHttpTxnIntercept` will "
"bypass the Traffic Server cache.  If response sent by the plugin should be "
"cached, use :c:func:`TSHttpTxnServerIntercept` instead. :c:func:"
"`TSHttpTxnIntercept` primary use is allow plugins to serve data about their "
"functioning directly."
msgstr ""

#: ../../reference/api/TSHttpTxnIntercept.en.rst:50
msgid ":c:func:`TSHttpTxnIntercept` must only be called once per transaction."
msgstr ""
